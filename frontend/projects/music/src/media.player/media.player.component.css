:host, .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    width: 100%;
}
.container {   
    will-change: height, bottom, transform;
    bottom: 0;
    position: fixed; 
    height: 100%;
    overflow: hidden;
    /* transition: height 0.65s ease-in-out, bottom 0.25s ease-in-out; */
    z-index: 1000;
    background-color: var(--color-background);
}
.container.reduced {
    bottom: 74px;
    height: var(--space-7);
}
.container.hidden {
    height: 0px;
    overflow: hidden;
}
.media-header {
    position: relative;
    flex-shrink: 0;
    width: 100%;
    height: var(--space-7);
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: var(--space-4);
    padding: var(--space-2);
    background-color: var(--color-background-200);
    border-bottom: solid 1px var(--color-background-300);
    cursor: pointer;
}
.media-info {
    display: flex;
    width: 85%;
}
.title {
    font-size: var(--space-4);
    font-weight: 500;
    color: var(--color-text);
    text-align: center;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.subtitle {
    font-size: var(--space-3);
    font-weight: 400;
    color: var(--color-neutral);
    text-align: center;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.audio-progress {
    --progress: 0.0;
    width: 100%;
    height: 2px;
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 1;
    transition: opacity 0.55s ease-in-out;
}
.audio-progress::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: calc(var(--progress) * 100%);
    height: 100%;
    background-color: var(--color-primary);
    transition: width 0.2s ease-in-out;
}
.status {
    position: absolute;
    left: var(--space-3);
    background-color: var(--color-primary);
    width: var(--space-4);
    height: var(--space-4);
    border-radius: 50%;
    mask-position: center;
    mask-size: contain;
    mask-repeat: no-repeat;
}
.queue-container {
    position: absolute;
    right: 0;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding: 0 var(--space-2);
    height: 100%;
    width: var(--space-8);
    cursor: pointer;
}
.queue {
    position: relative;
    background-color: var(--color-primary);
    width: var(--space-5);
    height: var(--space-5);
    mask-position: center;
    mask-size: contain;
    mask-repeat: no-repeat;
    border-radius: 50%;
}
.player-status {
    --mask: url('/plus.svg');
    position: absolute !important;
    right: var(--space-3);
    /* background-color: var(--color-primary) !important; */
    width: var(--space-5) !important;
    height: var(--space-5) !important;
    mask-position: center;
    mask-size: 1000%;
    mask-repeat: no-repeat;
    mask-size: 80%;
    border-radius: 50%;
    cursor: pointer;
    --color: var(--color-text);
    z-index: 6;
}
.media {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: 100%;
    max-width: 900px;
}
.thumbnail {
    position: relative;
    /* overflow: hidden; */
    width: 100%;
    max-width: 100%;
    aspect-ratio: 16 / 9;
    flex-shrink: 0;
    max-height: calc(900px * 9 / 16);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    transition: background 0.5s ease-in-out;
}
.thumbnail::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-background);
    box-shadow: 0 0 10px 10px var(--color-background);
    opacity: 0.3;
    pointer-events: none;
}
#thumbnail {
    width: 100%;
    height: 100%;
    object-fit: contain;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    transition: filter .5s ease-in-out, object-fit .5s ease-in-out;
}
#thumbnail.disco {
    filter: blur(5px) brightness(0.8);
    object-fit: cover;
}
#audio, audio {
    display: none; /* Hide the audio element */
}
.dashboard {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: var(--color-background);
    box-shadow: 0 0 10px 10px var(--color-background);
    width: 100%;
    height: 100%;
    padding-top: var(--space-2);
}
.duration {
    width: 100%;
    padding: var(--space-2);
    display: flex;
    justify-content: space-between;
}
.duration .time {
    font-size: var(--space-3);
    font-weight: 600;
    color: var(--color-neutral);
}
.metadata {
    align-self: flex-start;
    width: calc(100% - 2 * var(--space-5));
}
.info {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    width: 100%;
    padding: 0 var(--space-2);
    gap: var(--space-1);
}
.info .title {
    font-size: var(--space-6);
    font-weight: 600;
    color: var(--color-text);
    text-align: center;
    width: 100%;
    text-align: left;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.info .artist {
    font-size: var(--space-4);
    font-weight: 400;
    color: var(--color-neutral);
    text-align: center;
    width: 100%;
    text-align: left;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.liked {
    position: absolute;
    transform: translateY(var(--space-3));
    right: var(--space-3);
    width: var(--space-6);
    height: var(--space-6);
    background-color: var(--color-primary);
    mask-position: center;
    mask-size: contain;
    mask-repeat: no-repeat;
    cursor: pointer;
    z-index: 6;
}
.main-audio-progress {
    position: absolute;
    bottom: -8px;
    left: 0;
    width: 100%;
    height: 8px;
    overflow: hidden;
    background: var(--color-background-200);
    z-index: 6;
    /* transition: height 0.15s ease-in-out; */
}
.buffer-bar {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: var(--color-background-300);
    pointer-events: none;
}
.slider {
    top: 0;
    left: 0;
    --value: 00;
    --max: 100;
    width: 100%;
    height: 100%;
    background: transparent;
    appearance: none;
    outline: none;
    margin: 0;
    padding: 0;
    cursor: pointer;
    position: relative;
}
.slider::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: calc((var(--value) + 1) / var(--max) * 100%);
    height: 100%;
    background-color: var(--color-primary);
}
.slider::-webkit-slider-thumb {
    appearance: none;
    width: 4px;
    height: 100px;
    border-radius: 50%;
    background: var(--color);
}
.main-audio-progress:has(.slider:active) {
    height: 14px;
    transform: translateY(2px);
}
.controls, .modifiers {
    position: relative;
    display: flex;
    flex-direction: row;
    width: 100%;
    justify-content: center;
    gap: clamp(var(--space-5), 2.5vw, var(--space-5));
    padding: 0 var(--space-2);
    overflow: visible;
}
.control-button, .modifiers .modifier-button, .player-status {
    --color: var(--color-neutral);
    margin: var(--space-4) 0;
    position: relative;
    flex-shrink: 0;
    width: var(--space-7);
    height: var(--space-7);
    border-radius: 50%;
    cursor: pointer;
    background-color: transparent;
    z-index: 6;
}
.control-button::after, .modifiers .modifier-button::after {
    position: absolute;
    content: '';
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    mask-image: var(--mask);
    mask-position: center;
    mask-repeat: no-repeat;
    mask-size: cover;
    top: 0;
    left: 0;
    background-color: var(--color);
    transition: background-color 0.15s ease-in-out, transform 0.15s ease-in-out;
}
.control-button.active, .modifiers .modifier-button.active {
    --color: var(--color-primary);
}
.controls .control-button:first-child {
    margin-right: auto;
}
.controls .control-button:last-child {
    margin-left: auto;
}
.controls .control-button.inverse, .modifiers .modifier-button.inverse, .player-status.inverse {
    --mask: url('/plus.svg');
    background-color: var(--color-neutral);
    mask-position: center;
    mask-size: 1000%;
    mask-repeat: no-repeat;
    border-radius: 50%;
    cursor: default;
    scale: 1.4;
}
.controls .control-button.inverse::after {
    display: none;
}
.controls .control-button.inverse.active, .modifiers .modifier-button.inverse.active, .player-status.inverse.active {
    background-color: var(--color-primary);
    cursor: pointer;
}
.controls .control-button.inverse.spinner, .modifiers .modifier-button.inverse.spinner, .player-status.inverse.spinner {
    background-color: var(--color-neutral);
    animation: spin 1s linear infinite;
}
@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
    
}
@keyframes inverse-spin {
    from {
        transform: rotate(360deg);
    }
    to {
        transform: rotate(0deg);
    }
}


.controls .control-button.inverse::before, .modifiers .modifier-button.inverse::before, .player-status.inverse::before {
    position: absolute;
    content: '';
    width: 100%;
    height: 100%;
    mask-image: var(--mask);
    mask-position: center;
    mask-size: 70%;
    mask-repeat: no-repeat;
    top: 0;
    left: 0;
    background-color: var(--color-background-950);
}
.controls .control-button .indicator {
    position: absolute;
    top: 100%;
    left: 50%;
    width: var(--space-1);
    height: var(--space-1);
    transform: translateX(-50%);
    border-radius: 50%;
    background-color: var(--color-neutral);
}
.controls .control-button.active .indicator {
    background-color: var(--color-primary);
}
.modifiers {
    width: 35%;
    min-width: fit-content;
    justify-content: space-around;
    margin-bottom: var(--space-3);
}
.modifiers .modifier-button {
    width: var(--space-6);
    height: var(--space-6);
}
.source {
    position: relative;
    width: var(--space-5);
    height: var(--space-5);
}
.source::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color);
    mask-image: var(--mask);
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
}
.modifier-button.downloading {
    position: relative;
    --progress: 0;
}
.modifier-button.downloading::after {
    animation: spin 2s linear infinite;
    --color: var(--color-primary);
}
.modifier-button.downloading::before {
    content: '';
    position: absolute;
    width: 120%;
    height: 120%;
    top: -10%;
    left: -10%;
    border-radius: 50%;
    
    /* Create the ring effect */
    background: conic-gradient(
        var(--color-primary) calc(var(--progress, 0) * 1.02%), 
        transparent calc(var(--progress, 0) * 1.02%)
    );
    
    mask: radial-gradient(
        circle at center,
        transparent 60%,
        black 60%
    );
    
    transition: background 0.3s linear;
}

.draggable {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 5;
    background: transparent;
}
.container.hidden .draggable, .container.reduced .draggable {
    display: none;
}
#visualization-canvas {
    width: 100%;
    height: calc(100% - var(--space-7));
    position: absolute;
    top: var(--space-7);
    left: 0;
    z-index: 4;
    pointer-events: none;
    background: transparent;
}