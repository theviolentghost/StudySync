### Variables
@baseUrl = http://192.168.1.25:3000
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQGdtYWlsLmNvbSIsImlkIjoxLCJuZXd0b24iOnsiY2hhdCI6dHJ1ZSwic2RvYyI6eyJhc3Npc3RhbmNlIjp0cnVlfSwic2RyYXciOnsiYXNzaXN0YW5jZSI6ZmFsc2V9LCJzc3R1ZHkiOnsiYXNzaXN0YW5jZSI6ZmFsc2V9fSwiaWF0IjoxNzQ5ODU5MTg2LCJleHAiOjE3NDk5NDU1ODZ9.wiq3G873pXUVMNnbmUCsMQDHiHfGEoOrbG3cOMhr0oo
@refreshToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhlbGxvQGdtYWlsLmNvbSIsImlkIjoxLCJpYXQiOjE3NDk3NTA1ODYsImV4cCI6MTc1MDM1NTM4Nn0.gKYDFTPJjcCcnjtGFoAY0V_C0PNwClBPqGsdZNYrYKE
@projectId = 1
@fileId = 3
@video_id = K4DyBUG242c
@query = "On & On sulivan king"

### ============================================
### AUTHENTICATION ENDPOINTS
### ============================================

### Register a new user
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
    "email": "hello@gmail.com",
    "password": "1234",
    // "displayName": "Test User"
}

### Login user
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "email": "hello@gmail.com",
    "password": "1234"
}

### Check if user is authorized
GET {{baseUrl}}/auth/authorized
Authorization: Bearer {{token}}

### Get user information
GET {{baseUrl}}/auth/userinfo
Authorization: Bearer {{token}}

### Refresh access token
POST {{baseUrl}}/auth/refresh
Content-Type: application/json

{
    "refreshToken": "{{refreshToken}}"
}

### Logout user
DELETE {{baseUrl}}/auth/logout
Authorization: Bearer {{token}}

### ============================================
### PROJECT ENDPOINTS
### ============================================

### Get all user projects
GET {{baseUrl}}/user/projects/all
Authorization: Bearer {{token}}

### get project hierarchy
GET {{baseUrl}}/user/projects/hierarchy
Authorization: Bearer {{token}}

### create folder
POST {{baseUrl}}/user/folder/create
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "New Folder",
    "parentId": -1
}

### create group
POST {{baseUrl}}/user/group/create
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "New Group",
    "parentId": 1
}

### create project
POST {{baseUrl}}/user/project/create
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "New Project",
    "description": "This is a new project",
    "type": "project",
    "groupId": 1
}

### create file 
POST {{baseUrl}}/user/file/create
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "filePath": "/",
    "fileName": "good_file",
    "fileType": "sdoc",
    "projectId": 1,
    "data": {
        "text": "This is the content of the file"    
    }
}

### Get specific project with files
GET {{baseUrl}}/user/project/{{projectId}}
Authorization: Bearer {{token}}

### ============================================
### FILE ENDPOINTS
### ============================================

### Get specific file by ID
GET {{baseUrl}}/user/file/{{fileId}}
Authorization: Bearer {{token}}

### Get files for a specific project
GET {{baseUrl}}/user/project/{{projectId}}/files
Authorization: Bearer {{token}}


### music

GET {{baseUrl}}/music/search/{{query}}

###
POST {{baseUrl}}/audio/download/{{video_id}}
Content-Type: application/json

{
        "quality": "0",
        "bit_rate": "192K",
        "include_artwork": true
}
###

GET {{baseUrl}}/audio/artwork/{{video_id}}

###